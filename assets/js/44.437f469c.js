(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{791:function(t,r,a){"use strict";a.r(r);var e=a(30),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),a("h2",{attrs:{id:"一-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-安装"}},[t._v("#")]),t._v(" 一. 安装")]),t._v(" "),a("h2",{attrs:{id:"二-基础命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-基础命令"}},[t._v("#")]),t._v(" 二. 基础命令")]),t._v(" "),a("h4",{attrs:{id:"_1-新建仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-新建仓库"}},[t._v("#")]),t._v(" 1.新建仓库")]),t._v(" "),a("blockquote",[a("p",[t._v("git init\ngit remote add origin 'http://xxxxxx'\nnpm config set registry http://192.168.1.181:4873 // 设置npm安装ip")])]),t._v(" "),a("h5",{attrs:{id:"_2-获取远端分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取远端分支"}},[t._v("#")]),t._v(" 2. 获取远端分支")]),t._v(" "),a("blockquote",[a("p",[t._v("如果是新的仓库，这里只有master分支 "),a("br")]),t._v(" "),a("blockquote",[a("p",[t._v("查看本地分支 git branch "),a("br"),t._v("\n查看远端分支 git branch -r "),a("br"),t._v("\n查看所有分支 git branch -a")])])]),t._v(" "),a("blockquote",[a("p",[t._v("如果是已经在开发的仓库，本地git init后也只能看到master分支 "),a("br")]),t._v(" "),a("blockquote",[a("p",[t._v("使用命令： git fetch 获取远端所有分支")])])]),t._v(" "),a("h5",{attrs:{id:"_3-切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-切换分支"}},[t._v("#")]),t._v(" 3. 切换分支")]),t._v(" "),a("blockquote",[a("p",[t._v("git checkout xxxx "),a("br"),t._v("\n新建分支： git branch xxxx "),a("br"),t._v("\n首次切换远程分支到本地 git checkout -b 'xxx' origin/xxxx "),a("br")]),t._v(" "),a("blockquote",[a("p",[t._v("xxx表示本地的名字，origin/xxxx 表示远端的分支名字")])])]),t._v(" "),a("h5",{attrs:{id:"_4-放弃修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-放弃修改"}},[t._v("#")]),t._v(" 4. 放弃修改")]),t._v(" "),a("blockquote",[a("p",[t._v("已经add的代码 "),a("br")]),t._v(" "),a("blockquote",[a("p",[t._v("git reset HEAD xxx / git resrt HEAD . 撤销指定文件 / 所有文件")])])]),t._v(" "),a("h5",{attrs:{id:"_5-回退版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-回退版本"}},[t._v("#")]),t._v(" 5. 回退版本")]),t._v(" "),a("blockquote",[a("p",[t._v("git log 获取提交历史 "),a("br"),t._v("\ngit reset --hard HEAD^ 回退上一次 "),a("br"),t._v("\ngit reset --hard commitid 'xx' 回退指定历史版本 "),a("br"),t._v("\ngit reflog 也是获取提交历史 "),a("br"),t._v("\ngit reset HARD")])]),t._v(" "),a("h4",{attrs:{id:"_6-合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-合并"}},[t._v("#")]),t._v(" 6. 合并")]),t._v(" "),a("blockquote",[a("p",[t._v("1.将代码提交到当前分支 "),a("br"),t._v("\n2.切换到要合并的分支，比如将a合并到master "),a("br")]),t._v(" "),a("blockquote",[a("p",[t._v("git checkout master "),a("br"),t._v("\ngit merge a "),a("br"),t._v("\ngit push origin master "),a("br"),t._v("\n注： 切换到新分支最好拉取代码解决冲突后再提交")])])]),t._v(" "),a("h2",{attrs:{id:"三-配置用户名、密码、邮箱（全局加上-global）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-配置用户名、密码、邮箱（全局加上-global）"}},[t._v("#")]),t._v(" 三. 配置用户名、密码、邮箱（全局加上 --global）")]),t._v(" "),a("blockquote",[a("p",[t._v("git config user xxxx "),a("br"),t._v("\ngit config email xxxx "),a("br"),t._v("\ngit config password xxxx")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("但是每次拉取、推送，还需要输入用户名、密码，所以配置： "),a("br"),t._v(" "),a("code",[t._v("git config --global(全局时使用) credential.helper store")]),t._v(" "),a("br")])]),t._v(" "),a("h2",{attrs:{id:"四-代码关联多个仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-代码关联多个仓库"}},[t._v("#")]),t._v(" 四. 代码关联多个仓库")]),t._v(" "),a("blockquote",[a("p",[t._v("本地项目 project，现在要同时上传到 githubA、githubB")]),t._v(" "),a("ol",[a("li",[t._v("project已经是拉取的项目A")]),t._v(" "),a("li",[t._v("git remote set-url --add origin http://githubB")]),t._v(" "),a("li",[t._v("git push origin master")])])]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("如果报错：\n    有一个项目提示要先拉取再提交，那么就单独关联一下，即\n    git remote add other htt://githubB\n    git pull other master （将代码拉到本地，冲突合并等等处理完后）\n    git pull origin master (将最新的代码也拉取到本地)\n    git push origin master (最后直接推送即可)\n    最后可以 git remote remove other\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])}),[],!1,null,null,null);r.default=s.exports}}]);